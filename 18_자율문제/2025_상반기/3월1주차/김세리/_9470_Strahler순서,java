package _20250310;

import java.util.*;
import java.io.*;


public class _9470_Strahler순서 {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		StringTokenizer st;
		for(int tc=1;tc<=T;tc++) {
			st = new StringTokenizer(br.readLine());
			int K = Integer.parseInt(st.nextToken());
			int M = Integer.parseInt(st.nextToken());
			int P = Integer.parseInt(st.nextToken());
			int[] indegree = new int[M+1];
			int[] num = new int[M+1];
			List<List<Integer>> graph = new ArrayList<>();
			List<List<Integer>> preNodes = new ArrayList<>();
			for(int i=0;i<=M;i++) {
				graph.add(new ArrayList<>());
				preNodes.add(new ArrayList<>());
			}
			for(int i=0;i<P;i++) {
				st = new StringTokenizer(br.readLine());
				int A = Integer.parseInt(st.nextToken());
				int B = Integer.parseInt(st.nextToken());
				graph.get(A).add(B);
				preNodes.get(B).add(A);
				indegree[B]++;
			}
			Queue<Integer> q = new LinkedList<>();
			for(int i=1;i<=M;i++) {
				if(indegree[i]==0) {
					q.add(i);
					num[i]=1;
				}
			}
			while(!q.isEmpty()) {
				int curr = q.poll();
				for(int next:graph.get(curr)) {
					indegree[next]--;
					if(indegree[next]==0) {
						int tmp=0;
						int cnt=0;
						for(int preNode : preNodes.get(next)) {
							if(num[preNode]>tmp) {
								tmp = num[preNode];
								cnt=1;
							}else if(num[preNode]==tmp) {
								cnt++;
							}
						}
						if(cnt==1) {
							num[next]=tmp;
						}else if(cnt>1){
							num[next]=tmp+1;
						}
						q.add(next);
					}
				}
			}
//			System.out.println(Arrays.toString(num));
			System.out.println(K+" "+num[M]);
			
		}
		
	}

}
